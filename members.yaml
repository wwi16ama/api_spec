openapi: 3.0.0
info:
  title: "Sub-API-Spec"
  version: 0.0.0
paths:
  /members:
    get:
      summary: List of all members
      operationId: listMembers
      tags:
        - Members
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
            default: 20
        - name: start
          in: query
          description: How many items to skip
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: orderBy
          in: query
          description: The field by which the result is to be sorted
          required: false
          schema:
            type: string
            default: lastName
        - name: direction
          in: query
          description: the sorting direction
          required: false
          schema:
            type: string
            enum: ["asc", "desc"]
            default: "asc"
      responses:
        '200':
          description: A paged array of members
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/ListMember'
        '400':
          description: This error is thrown when the parameters are faulty
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
    post:
      summary: Create a member
      operationId: createMembers
      requestBody:
        description: Member to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMember'
      tags:
        - Members
      responses:
        '200':
          description: Responds with the member and all his fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '400':
          description: Response when request is wrong, i.e. if required fields are empty
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
  '/members/{id}':
    get:
      summary: Info for a specific member
      operationId: shoMemberById
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the member to retrieve
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: Response when no member found
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
    put:
      summary: Update a specific member
      operationId: updateMemberById
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the member to update
          schema:
            type: integer
            format: int32
      requestBody:
        description: Member to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMember'
      responses:
        '204':
          description: Expected response to a valid request
        '400':
          description: Response when request is wrong, i.e. if required fields are empty
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        '404':
          description: Response when no member found
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
    delete:
      summary: Delete specific member
      operationId: deleteMemberById
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the member to delete
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Expected response to a valid request
        '404':
          description: Response when no member found
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
  '/members/{id}/changePassword':
    put:
      summary: Change the password of a specific member
      operationId: updatePasswordAsUser
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the member who wants to update his password
          schema:
            type: integer
            format: int32
      requestBody:
        description: Old and new Password
        required: true
        content:
          application/json:
            schema:
              properties:
                password:
                  $ref: '#/components/schemas/Password'
                newPassword:
                  $ref: '#/components/schemas/Password'
      responses:
        '204':
          description: Expected response to a valid request
        '400':
          description: When the old Password is not correct
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        '401':
          description: If the userId from the Authentification Header and the request-parameter id don't match
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
  '/members/{id}/changePasswordAdmin':
    put:
      summary: Change the password of a specific member as admin
      operationId: updatePasswordAsAdmin
      tags:
        - Members
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the Member, 
          schema:
            type: integer
            format: int32
      requestBody:
        description: the new password
        required: true
        content:
          application/json:
            schema:
              properties:
                newPassword:
                  $ref: '#/components/schemas/Password'
      responses:
        '204':
          description: Expected response to a valid request
        '401':
          description: When the user is not admin
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        '404':
          description: When there is no User with the specified Id
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Error'
components:
  schemas:
    PutMember:
      required:
        - firstName
        - lastName
        - dateOfBirth
        - gender
        - status
        - email
        - address
        - bankingAccount
        - admissioned
        - password
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          type: string
          enum: [MALE, FEMALE]
        status:
          type: string
          enum: [ACTIVE, PASSIVE, HONORARYMEMBER]
        email:
          type: string
          format: email
        address:
          $ref: '#/components/schemas/Address'
        bankingAccount:
          type: string
        admissioned:
          type: boolean
        offices:
          type: array
          items:
            $ref: '#/components/schemas/Office'
        flightAuthorization:
          type: array
          items:
            $ref: '#/components/schemas/Authorization'
    PostMember:
      allOf:
        - required:
          - password
          properties:
            password:
              $ref: '#/components/schemas/Password'
        - $ref: '#/components/schemas/PutMember'       
    Member:
      description: services ist noch vorläufig
      allOf:
        - required:
          - id
          properties:
            id:
              type: integer
              format: int32
            memberBankingAccount:
              properties:
                id:
                  type: integer
                  format: int32
            services:
              type: array
              items:
                $ref: 'https://raw.githubusercontent.com/wwi16ama/api_spec/master/openapi.yaml#/components/schemas/Service'
        - $ref: '#/components/schemas/PutMember'
    ListMember:
      required:
        - id
        - firstName
        - lastName
        - memberBankingAccountId
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        memberBankingAccountId:
          type: integer
          format: int32
    Address:
      required:
        - postalCode
        - streetAddress
        - city
      properties:
        postalCode:
          type: integer
          format: int32
        streetAddress:
          type: string
        city:
          type: string
    Authorization:
      properties:
        authorization:
          type: string
          enum: [PPLA, PPLB, BZFI, BZFII, LEHRBEFUGNIS]
        dateOfIssue:
          type: string
          format: date
        expires:
          type: string
          format: date
    Office:
      properties:
        title:
          type: string
          enum: [VORSTANDSVORSITZENDER, SYSTEMADMINISTRATOR, KASSIERER, FLUGWART, IMBETRIEBSKONTROLLTURMARBEITEND]
    Password:
      type: string
      description: "Mind: 8 Zeichen, 1 Zahl, 1 Buchstabe"
